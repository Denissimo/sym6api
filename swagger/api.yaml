openapi: 3.0.0

info:
  title: Abraham Technology API
  description: Products API of ABR
  version: 1.0.0

servers:
  - url: https://dev-api.airchannel.net/
    description: API server
  - url: https://api.airchannel.net/
    description: API server
  - url: http://sym4swg
    description: Localhost server from develop


tags:
  - name: User
    description: Данные пользователей

  - name: Current User
    description: Данные текущего пользователя

  - name: Individual
    description: Данные по физическим лицам

  - name: Entrepreneur
    description: Данные по индивидуальным предпринимателям

  - name: Legal Entity
    description: Данные по юридическитм лицам

  - name: Pilot
    description: Данные по пилотам

  - name: Owner
    description: Данные по владельцам

  - name: Document
    description: Документы пользователей

  - name: Classifiers
    description: Классификаторы

  - name: Aircraft
    description: Данные по воздушным судам

  - name: Aircraft Registration
    description: Данные по заявкам на регистрацию

  - name: EngineComplect
    description: Данные по комплектам двигателей

  - name: Tracker
    description: Данные по комплектам двигателей

  - name: Application
    description: Данные по воздушным заявкам

  - name: Track
    description: Данные по воздушным маршрутам

  - name: Content
    description: Содержимое сайта (контент)

  - name: Test
    description: Test API

paths:

  /aircraft/add:
    post:
      tags:
        - "Aircraft"
      summary: "Добавление БВС"
      description: "Add aircraft into table aircraft"
      operationId: "Add aircraft"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                channels:
                  type: array
                  description: Каналы связи
                  example: [ 1, 2 ]
                controlSystem:
                  type: integer
                  description: Система управления
                  example: 1
                category:
                  type: integer
                  description: ID Категории по назначению
                  example: 1
                mass:
                  type: integer
                  description: ID Категории по массе
                  example: 1
                engine:
                  type: integer
                  description: ID Категории по типу двигателя
                  example: 1
                engineTypes:
                  type: array
                  items:
                    $ref: '#/components/schemas/EngineType'
                registrationStatus:
                  type: integer
                  description: ID Категории по назначению
                  example: 1
                owner:
                  $ref: '#/components/schemas/Uuid'
                aircraft:
                  $ref: '#/components/schemas/AircraftData'
              required:
                - userId
                - aircraft
                - category
                - mass
                - engine
                - registrationStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /aircraft/{id}:
    get:
      tags:
        - "Aircraft"
      summary: "Загрузка БВС по ID"
      description: "Load aircraft from table aircraft"
      operationId: "Load aircraft"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aircraft'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "Aircraft"
      summary: "Изменение БВС"
      description: "Update aircraft in table aircraft"
      operationId: "Update aircraft"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ID Пользователя
                  example: 1
                channels:
                  type: array
                  description: Каналы связи
                  example: [ 1, 2 ]
                controlSystem:
                  type: integer
                  description: Система управления
                  example: 1
                category:
                  type: integer
                  description: ID Категории по назначению
                  example: 1
                mass:
                  type: integer
                  description: ID Категории по массе
                  example: 1
                engine:
                  type: integer
                  description: ID Категории по типу двигателя
                  example: 1
                engineTypes:
                  type: array
                  items:
                    $ref: '#/components/schemas/EngineType'
                registrationStatus:
                  type: integer
                  description: ID Категории по назначению
                  example: 1
                owner:
                  $ref: '#/components/schemas/Uuid'
                aircraft:
                  $ref: '#/components/schemas/AircraftData'
              required:
                - userId
                - aircraft
                - category
                - mass
                - engine
                - registrationStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "Aircraft"
      summary: "Удаление БВС"
      description: "Delete aircraft from table aircraft"
      operationId: "Delete aircraft"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /aircraft_registration/add:
    post:
      tags:
        - "Aircraft Registration"
      summary: "Добавление регистрации"
      description: "Add aircraft registration into table aircraft_registration"
      operationId: "Add aircraft registration"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                aircraftRegistration:
                  $ref: '#/components/schemas/AircraftRegistrationData'
                statusLabel:
                  type: string
                  description: Метка статуса заявки
                  example: 'unregistered'
                typeLabel:
                  type: string
                  description: Метка типа заявки
                  example: 'reg'
              required:
                - aircraft
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /aircraft_registration_list/{id}:
    get:
      tags:
        - "Aircraft Registration"
      summary: "Загрузка регистраций по ID БВС"
      description: "Load aircraft registration list by aircraft from table aircraft_registration"
      operationId: "Load aircraft registration by aircraft"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AircraftRegistration'
        404:
          $ref: '#/components/schemas/404'

  /aircraft_registrations_by_status/{id}:
    get:
      tags:
        - "Aircraft Registration"
      summary: "Загрузка регистраций по ID статуса"
      description: "Load aircraft registration list by status from table aircraft_registration"
      operationId: "Load aircraft registration by status"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AircraftRegistration'
        404:
          $ref: '#/components/schemas/404'

  /aircraft_registration_types:
    get:
      security: []
      tags:
        - "Aircraft Registration"
      summary: "Загрузка типов регистраций БВС"
      description: "Load aircraft registration types list"
      operationId: "Load aircraft registration types"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  registrationTypes:
                    type: array
                    items:
                      $ref: '#/components/schemas/AircraftRegistrationType'
        404:
          $ref: '#/components/schemas/404'

  /aircraft_registration/{id}:
    get:
      tags:
        - "Aircraft Registration"
      summary: "Загрузка регистрации по ID"
      description: "Load aircraft registration from table aircraft_registration"
      operationId: "Load aircraft registration"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AircraftRegistration'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "Aircraft Registration"
      summary: "Изменение БВС"
      description: "Update aircraft registration in table aircraft_registration"
      operationId: "Update aircraft registration"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                aircraftRegistration:
                  $ref: '#/components/schemas/AircraftRegistrationData'
                statusLabel:
                  type: string
                  description: Метка статуса заявки
                  example: 'unregistered'
                typeLabel:
                  type: string
                  description: Метка типа заявки
                  example: 'reg'
              required:
                - aircraft
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "Aircraft Registration"
      summary: "Удаление БВС"
      description: "Delete aircraft registration from table aircraft_registration"
      operationId: "Delete aircraft registration"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /classifiers/aircraft/:
    get:
      security: []
      tags:
        - "Classifiers"
      summary: "Загрузка всех классификаторов БВС"
      description: "Load aircraft classifiers (all)"
      operationId: "Load aircraft classifiers"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: array
                    items:
                      $ref: '#/components/schemas/AircraftCategory'
                  engine:
                    type: array
                    items:
                      $ref: '#/components/schemas/AircraftEngine'
                  mass:
                    type: array
                    items:
                      $ref: '#/components/schemas/AircraftMass'
                  status:
                    type: array
                    items:
                      $ref: '#/components/schemas/AircraftRegistrationStatus'
        404:
          $ref: '#/components/schemas/404'

  /classifiers/aircraft_category/{id}:
    get:
      security: []
      tags:
        - "Classifiers"
      summary: "Загрузка категории БВС по ID"
      description: "Load aircraft categorу from table aircraft_category"
      operationId: "Load aircraft category"
      parameters:
        - in: path
          name: id
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    $ref: '#/components/schemas/AircraftCategory'
        404:
          $ref: '#/components/schemas/404'

  /my/userdata:
    get:
      tags:
        - "Current User"
      summary: "Данные текущего пользователя"
      description: "Data of current user"
      operationId: "current user data"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
    put:
      tags:
        - "Current User"
      summary: "Изменение текущего пользователя"
      description: "Update data of current user"
      operationId: "update  current user data"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserUpdate'
        404:
          $ref: '#/components/schemas/404'

  /my/list/tracks:
    get:
      tags:
        - "Current User"
      summary: "Список маршрутов текущего пользователя"
      description: "List tracks of current user"
      operationId: "List current user tracks"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tracks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Uuid'
        404:
          $ref: '#/components/schemas/404'

  /my/data/tracks:
    get:
      tags:
        - "Current User"
      summary: "Загрузка маршрутов текущего пользователя"
      description: "Load tracks of current user"
      operationId: "Load current user tracks"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tracks:
                    type: array
                    items:
                      $ref: '#/components/schemas/TrackId'
        404:
          $ref: '#/components/schemas/404'

  /my/list/applications:
    get:
      tags:
        - "Current User"
      summary: "Список заявок текущего пользователя"
      description: "List applications of current user"
      operationId: "List applications user tracks"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  applications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Uuid'
        404:
          $ref: '#/components/schemas/404'

  /my/data/applications:
    get:
      tags:
        - "Current User"
      summary: "Загрузка заявок текущего пользователя"
      description: "Load applications of current user"
      operationId: "Load applications user tracks"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  applications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Application'
        404:
          $ref: '#/components/schemas/404'

  /my/list/aircrafts:
    get:
      tags:
        - "Current User"
      summary: "Список БВС текущего пользователя"
      description: "List aircrafts of current user"
      operationId: "List current user aircrafts"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  aircrafts:
                    type: array
                    items:
                      $ref: '#/components/schemas/AircraftNamed'
        404:
          $ref: '#/components/schemas/404'

  /my/data/aircrafts:
    get:
      tags:
        - "Current User"
      summary: "Загрузка БВС текущего пользователя"
      description: "Load aircrafts of current user"
      operationId: "Load current user aircrafts"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  aircrafts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Aircraft'
                  pagesQty:
                    type: integer
                    example: 3
                  $currentPage:
                    type: integer
                    example: 2
        404:
          $ref: '#/components/schemas/404'

  /my/data/aircrafts/{page}:
    get:
      tags:
        - "Current User"
      summary: "Постраничная загрузка БВС текущего пользователя"
      description: "Load aircrafts of current user paginated"
      operationId: "Load current user aircrafts paginated"
      parameters:
        - in: path
          name: page
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  aircrafts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Aircraft'
                  pagesQty:
                    type: integer
                    example: 3
                  $currentPage:
                    type: integer
                    example: 2
        404:
          $ref: '#/components/schemas/404'

  /my/list/owners:
    get:
      tags:
        - "Current User"
      summary: "Список собственников текущего пользователя"
      description: "List owners of current user"
      operationId: "List current user owners"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  owners:
                    type: array
                    items:
                      $ref: '#/components/schemas/Uuid'
        404:
          $ref: '#/components/schemas/404'



  /classifiers/aircraft_category/:
    get:
      security: []
      tags:
        - "Classifiers"
      summary: "Загрузка списка категорий БВС"
      description: "Load aircraft categories from table aircraft_category"
      operationId: "Load aircraft categories"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: array
                    items:
                      $ref: '#/components/schemas/AircraftCategory'
        404:
          $ref: '#/components/schemas/404'

  /classifiers/aircraft_engine/{id}:
    get:
      security: []
      tags:
        - "Classifiers"
      summary: "Загрузка типа двигателя БВС по ID"
      description: "Load aircraft engine from table aircraft_engine"
      operationId: "Load aircraft engine"
      parameters:
        - in: path
          name: id
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  engine:
                    $ref: '#/components/schemas/AircraftEngine'
        404:
          $ref: '#/components/schemas/404'

  /classifiers/aircraft_engine/:
    get:
      security: []
      tags:
        - "Classifiers"
      summary: "Загрузка списка Типов двигателей БВС"
      description: "Load aircraft engines from table aircraft_engine"
      operationId: "Load aircraft engines"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  engine:
                    type: array
                    items:
                      $ref: '#/components/schemas/AircraftEngine'
        404:
          $ref: '#/components/schemas/404'

  /classifiers/aircraft_mass/{id}:
    get:
      security: []
      tags:
        - "Classifiers"
      summary: "Загрузка массы БВС по ID"
      description: "Load aircraft mass from table aircraft_mass"
      operationId: "Load aircraft mass"
      parameters:
        - in: path
          name: id
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  mass:
                    $ref: '#/components/schemas/AircraftMass'
        404:
          $ref: '#/components/schemas/404'

  /classifiers/aircraft_mass/:
    get:
      security: []
      tags:
        - "Classifiers"
      summary: "Загрузка списка масс двигателей БВС"
      description: "Load aircraft engines from table aircraft_mass"
      operationId: "Load aircraft masses"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  mass:
                    type: array
                    items:
                      $ref: '#/components/schemas/AircraftMass'
        404:
          $ref: '#/components/schemas/404'

  /classifiers/aircraft_status/:
    get:
      security: []
      tags:
        - "Classifiers"
      summary: "Загрузка списка статусов БВС"
      description: "Load aircraft engines from table aircraft_status"
      operationId: "Load aircraft statuses"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: array
                    items:
                      $ref: '#/components/schemas/AircraftRegistrationStatus'
        404:
          $ref: '#/components/schemas/404'

  /track/add:
    post:
      tags:
        - "Track"
      summary: "Добавление маршрута"
      description: "Add track to table track"
      operationId: "Add track"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                track:
                  $ref: '#/components/schemas/TrackData'
              required:
                - track
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackId:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /track/user/{userId}:
    get:
      tags:
        - "Track"
      summary: "Загрузка всех мершрутов пользователя по его ID"
      description: "Load tracks from table track"
      operationId: "Load tracks"
      parameters:
        - in: path
          name: userId
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  tracks:
                    type: array
                    items:
                      $ref: '#/components/schemas/TrackId'
        404:
          $ref: '#/components/schemas/404'

  /track/{id}:
    get:
      tags:
        - "Track"
      summary: "Загрузка маршрута по ID"
      description: "Load track from table track"
      operationId: "Load track"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  user:
                    $ref: '#/components/schemas/User'
                  applicationsNumber:
                    type: integer
                    description: Кол-во заявок с данным маршрутом
                    example: 0
                  track:
                    $ref: '#/components/schemas/Track'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "Track"
      summary: "Изменение маршрута"
      description: "Update track to table track"
      operationId: "Update track"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ID Пользователя
                  example: 1
                track:
                  $ref: '#/components/schemas/Track'
              required:
                - track
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackId:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "Track"
      summary: "Удаление маршрута"
      description: "Delete track from table track"
      operationId: "Delete track"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /application/add:
    post:
      tags:
        - "Application"
      summary: "Добавление заявки"
      description: "Add Application to table application"
      operationId: "Add application"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                application:
                  $ref: '#/components/schemas/ApplicationData'
                pilotId:
                  $ref: '#/components/schemas/Uuid'
                chiefId:
                  type: integer
                  description: ID Пилота
                  example: 1
                statusId:
                  type: integer
                  description: ID Статуса
                  example: 1
                trackId:
                  $ref: '#/components/schemas/Uuid'
                aircraftId:
                  $ref: '#/components/schemas/Uuid'
              required:
                - userId
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /application/user/{userId}:
    get:
      tags:
        - "Application"
      summary: "Загрузка всех заявкок пользователя по его ID"
      description: "Load applications from table application"
      operationId: "Load applications"
      parameters:
        - in: path
          name: userId
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  applications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Application'
  /application/interval/{begin}/{end}:
    get:
      tags:
        - "Application"
      summary: "Загрузка всех заявкок по интервалу времени"
      description: "Load applications from table application"
      operationId: "Load applications by time interval"
      parameters:
        - in: path
          name: begin
          required: true
        - in: path
          name: end
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  begin:
                    $ref: '#/components/schemas/DateTime'
                  end:
                    $ref: '#/components/schemas/DateTime'
                  applications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Application'
        404:
          $ref: '#/components/schemas/404'

  /application/{id}:
    get:
      tags:
        - "Application"
      summary: "Загрузка заявки по ID"
      description: "Load application from table application"
      operationId: "Load application"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  user:
                    $ref: '#/components/schemas/User'
                  application:
                    $ref: '#/components/schemas/ApplicationData'
                  status:
                    $ref: '#/components/schemas/ApplicationStatus'
                  aircraft:
                    $ref: '#/components/schemas/Aircraft'
                  pilot:
                    $ref: '#/components/schemas/User'
                  chief:
                    $ref: '#/components/schemas/User'
                  track:
                    $ref: '#/components/schemas/TrackId'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "Application"
      summary: "Изменение заявки"
      description: "Update Application to table application"
      operationId: "Update application"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ID Пользователя
                  example: 1
                application:
                  $ref: '#/components/schemas/ApplicationData'
                pilotId:
                  $ref: '#/components/schemas/Uuid'
                chiefId:
                  type: integer
                  description: ID Пилота
                  example: 1
                statusId:
                  type: integer
                  description: ID Статуса
                  example: 1
                trackId:
                  $ref: '#/components/schemas/Uuid'
                aircraftId:
                  $ref: '#/components/schemas/Uuid'
              required:
                - id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "Application"
      summary: "Удаление заявки"
      description: "Delete application from table application"
      operationId: "Delete application"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /individual/add:
    post:
      tags:
        - "Individual"
      summary: "Добавление физического лица"
      description: "Add individual to table individual"
      operationId: "Add individual"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identityId:
                  $ref: '#/components/schemas/Uuid'
                individual:
                  $ref: '#/components/schemas/IndividualData'
              required:
                - residence
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /individual/{id}:
    get:
      tags:
        - "Individual"
      summary: "Загрузка физического лица по ID"
      description: "Load individual from table individual"
      operationId: "Load individual"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  user:
                    $ref: '#/components/schemas/User'
                  individual:
                    $ref: '#/components/schemas/IndividualData'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "Individual"
      summary: "Изменение физического лица по ID"
      description: "Edit individual in the table individual"
      operationId: "Edit individual"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identityId:
                  $ref: '#/components/schemas/Uuid'
                individual:
                  $ref: '#/components/schemas/IndividualData'
              required:
                - residence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "Individual"
      summary: "Удаление физического лица по ID"
      description: "Delete individual from table individual"
      operationId: "Delete individual"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /entrepreneur/add:
    post:
      tags:
        - "Entrepreneur"
      summary: "Добавление предпринимателя"
      description: "Add entrepreneur to table entrepreneur"
      operationId: "Add entrepreneur"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                headId:
                  $ref: '#/components/schemas/Uuid'
                representative:
                  type: array
                  items:
                    $ref: '#/components/schemas/Uuid'
                entrepreneur:
                  $ref: '#/components/schemas/EntrepreneurData'
              required:
                - residence
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /engine_complect/add:
    post:
      tags:
        - "EngineComplect"
      summary: "Добавление комплекта двигателя лица"
      description: "Add ngine complect to table ngine complect"
      operationId: "Add ngine complect"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                engineComplect:
                  $ref: '#/components/schemas/EngineComplectData'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID комплекта
                    example: 3
        404:
          $ref: '#/components/schemas/404'

  /engine_complect/{id}:
    get:
      tags:
        - "EngineComplect"
      summary: "Загрузка комплекта двигателя по ID"
      description: "Load engine_complect from table engine_complect"
      operationId: "Load engine_complect"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID комплекта
                    example: 3
                  engineComplect:
                    $ref: '#/components/schemas/EngineComplectData'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "EngineComplect"
      summary: "Изменение комплекта двигателя по ID"
      description: "Edit engine_complect in the table engine_complect"
      operationId: "Edit engine_complect"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                engineComplect:
                  type: object
                  properties:
                    aircraftId:
                      $ref: '#/components/schemas/Uuid'
                    engineId:
                      type: integer
                      description: ID типа двигателя
                      example: 1
                    number:
                      type: integer
                      description: Количество
                      example: 2

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID комплекта
                    example: 3
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "EngineComplect"
      summary: "Удаление комплекта двигателя по ID"
      description: "Delete engine_complect from table engine_complect"
      operationId: "Delete engine_complect"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID комплекта
                    example: 3
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /aircraft_engine/{aircraftId}:
    put:
      tags:
        - "EngineComplect"
      summary: "Изменение двигатеей по Aircraft ID"
      description: "Edit engine by aircaft id"
      operationId: "Edit engines"
      parameters:
        - in: path
          name: aircraftId
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                aircraftId:
                  $ref: '#/components/schemas/Uuid'
                engineType:
                  type: array
                  items:
                    $ref: '#/components/schemas/EngineType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  aircraftId:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
  /entrepreneur/{id}:
    get:
      tags:
        - "Entrepreneur"
      summary: "Загрузка предпринимателя по ID"
      description: "Load entrepreneur from table entrepreneur"
      operationId: "Load entrepreneur"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  user:
                    $ref: '#/components/schemas/User'
                  head:
                    $ref: '#/components/schemas/Individual'
                  representative:
                    type: array
                    items:
                      $ref: '#/components/schemas/Uuid'
                  entrepreneur:
                    $ref: '#/components/schemas/EntrepreneurData'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "Entrepreneur"
      summary: "Изменение предпринимателя по ID"
      description: "Edit entrepreneur in the table entrepreneur"
      operationId: "Edit entrepreneur"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                headId:
                  $ref: '#/components/schemas/Uuid'
                representative:
                  type: array
                  items:
                    $ref: '#/components/schemas/Uuid'
                entrepreneur:
                  $ref: '#/components/schemas/EntrepreneurData'
              required:
                - residence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "Entrepreneur"
      summary: "Удаление предпринимателя по ID"
      description: "Delete entrepreneur from table entrepreneur"
      operationId: "Delete entrepreneur"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /legal_entity/add:
    post:
      tags:
        - "Legal Entity"
      summary: "Добавление юридического лица"
      description: "Add legal entity to table legal_entity"
      operationId: "Add legal entity"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                headId:
                  $ref: '#/components/schemas/Uuid'
                representative:
                  type: array
                  items:
                    $ref: '#/components/schemas/Uuid'
                legalEntity:
                  $ref: '#/components/schemas/LegalEntityData'
              required:
                - residence
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /legal_entity/{id}:
    get:
      tags:
        - "Legal Entity"
      summary: "Загрузка юридического лица по ID"
      description: "Load legal entity from table legal_entity"
      operationId: "Load legal entity"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  user:
                    $ref: '#/components/schemas/User'
                  head:
                    $ref: '#/components/schemas/Individual'
                  representative:
                    type: array
                    items:
                      $ref: '#/components/schemas/Uuid'
                  legalEntity:
                    $ref: '#/components/schemas/LegalEntityData'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "Legal Entity"
      summary: "Изменение юридического лица по ID"
      description: "Edit legal entity in the table legal_entity"
      operationId: "Edit legal entity"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                headId:
                  $ref: '#/components/schemas/Uuid'
                representative:
                  type: array
                  items:
                    $ref: '#/components/schemas/Uuid'
                legalEntity:
                  $ref: '#/components/schemas/LegalEntityData'
              required:
                - residence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "Legal Entity"
      summary: "Удаление юридического лица по ID"
      description: "Delete legal entity from table legal_entity"
      operationId: "Delete legal entity"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /tracker/add:
    post:
      tags:
        - "Tracker"
      summary: "Добавление трекера"
      description: "Add tracker to table tracker"
      operationId: "Add tracker"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: integer
                  description: ID типа трекера
                  example: 1
                aircraft:
                  $ref: '#/components/schemas/Uuid'
                tracker:
                  $ref: '#/components/schemas/TrackerData'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /tracker/{id}:
    get:
      tags:
        - "Tracker"
      summary: "Загрузка трекера по ID"
      description: "Load tracker from table tracker"
      operationId: "Load tracker"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  type:
                    $ref: '#/components/schemas/TrackerType'
                  aircraft:
                    $ref: '#/components/schemas/Uuid'
                  tracker:
                    $ref: '#/components/schemas/TrackerData'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "Tracker"
      summary: "Изменение трекера по ID"
      description: "Edit tracker in the table tracker"
      operationId: "Edit tracker"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: integer
                  description: ID типа трекера
                  example: 1
                tracker:
                  $ref: '#/components/schemas/TrackerData'
                aircraft:
                  $ref: '#/components/schemas/Uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "Tracker"
      summary: "Удаление трекера по ID"
      description: "Delete tracker from table tracker"
      operationId: "Delete tracker"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /pilot/add:
    post:
      tags:
        - "Pilot"
      summary: "Добавление пилота"
      description: "Add pilot to table pilot"
      operationId: "Add pilot"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                individualId:
                  $ref: '#/components/schemas/Uuid'
                pilot:
                  $ref: '#/components/schemas/PilotData'
              required:
                - residence
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /pilot/{id}:
    get:
      tags:
        - "Pilot"
      summary: "Загрузка пилота по ID"
      description: "Load pilot from table pilot"
      operationId: "Load pilot"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  user:
                    $ref: '#/components/schemas/User'
                  individual:
                    $ref: '#/components/schemas/Individual'
                  pilot:
                    $ref: '#/components/schemas/PilotData'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "Pilot"
      summary: "Изменение пилота по ID"
      description: "Edit pilot in the table pilot"
      operationId: "Edit pilot"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                individualId:
                  $ref: '#/components/schemas/Uuid'
                pilot:
                  $ref: '#/components/schemas/PilotData'
              required:
                - residence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "Pilot"
      summary: "Удаление пилота по ID"
      description: "Delete pilot from table pilot"
      operationId: "Delete pilot"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /owner/add:
    post:
      tags:
        - "Owner"
      summary: "Добавление владельца"
      description: "Add owner to table owner"
      operationId: "Add owner"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                individualId:
                  $ref: '#/components/schemas/Uuid'
                entrepreneurId:
                  $ref: '#/components/schemas/Uuid'
                legalEntityId:
                  $ref: '#/components/schemas/Uuid'
                owner:
                  $ref: '#/components/schemas/OwnerData'
              required:
                - residence
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /owner/{id}:
    get:
      tags:
        - "Owner"
      summary: "Загрузка владельца по ID"
      description: "Load owner from table owner"
      operationId: "Load owner"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  user:
                    $ref: '#/components/schemas/User'
                  individual:
                    $ref: '#/components/schemas/Individual'
                  entrepreneur:
                    $ref: '#/components/schemas/Entrepreneur'
                  legalEntity:
                    $ref: '#/components/schemas/LegalEntity'
                  owner:
                    $ref: '#/components/schemas/OwnerData'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "Owner"
      summary: "Изменение пилота по ID"
      description: "Edit owner in the table owner"
      operationId: "Edit owner"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                individualId:
                  $ref: '#/components/schemas/Uuid'
                entrepreneurId:
                  $ref: '#/components/schemas/Uuid'
                legalEntityId:
                  $ref: '#/components/schemas/Uuid'
                owner:
                  $ref: '#/components/schemas/OwnerData'
              required:
                - residence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

    delete:
      tags:
        - "Owner"
      summary: "Удаление пилота по ID"
      description: "Delete owner from table owner"
      operationId: "Delete owner"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /register/user:
    post:
      security: []
      tags:
        - "User"
      summary: "Регистрация пользователя"
      description: "Add user to fos_user_user"
      operationId: "Add user"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/UserNew'
                legalRoles:
                  type: array
                  description: Юридический статус
                  example: [
                    'ROLE_INDIVIDUAL',
                    'ROLE_ENTREPRENEUR_HEAD',
                    'ROLE_ENTREPRENEUR_REPRESENTATIVE',
                    'ROLE_LEGAL_ENTITY_HEAD',
                    'ROLE_LEGAL_ENTITY_REPRESENTATIVE'
                  ]
                aircraftRoles:
                  type: array
                  description: Отношение к БВС
                  example: [ 'ROLE_OWNER', 'ROLE_EXPLUATANT', 'ROLE_PILOT' ]
              required:
                - username
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          $ref: '#/components/schemas/404'


  /user/name/{username}:
    get:
      tags:
        - "User"
      summary: "Загрузка пользователя по username"
      description: "Load user from table fos_user_user"
      operationId: "Load user by username"
      parameters:
        - in: path
          name: username
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          $ref: '#/components/schemas/404'

  /user/{id}:
    get:
      tags:
        - "User"
      summary: "Загрузка пользователя по ID"
      description: "Load user from table fos_user_user"
      operationId: "Load user"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "User"
      summary: "Изменение пользователя"
      description: "Update user to table fos_user_user"
      operationId: "Update user"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/UserUpdate'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /document/upload:
    post:
      tags:
        - "Document"
      summary: "Загрузка файлов"
      description: "Files upload to server"
      operationId: "Files upload"
      parameters:
        - name: additionalMetadata
          in: query
          description: Additional Metadata
          required: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadDocumentForm'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 154
                  createdAt:
                    $ref: '#/components/schemas/DateTime'

  /document/{id}:
    get:
      tags:
        - "Document"
      summary: "Загузка файла по ID"
      description: "Load document from table upload_document"
      operationId: "Load document"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: ID файла
                    example: 3
                  uploadDocument:
                    $ref: '#/components/schemas/UploadDocumentData'
                  uploadDocumentType:
                    $ref: '#/components/schemas/UploadDocumentType'
                  userDocument:
                    $ref: '#/components/schemas/Uuid'
                  user:
                    type: integer
                    description: ID юзера
                    example: 3
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
    put:
      tags:
        - "Document"
      summary: "Изменение загруженного документа по ID"
      description: "Update document from table upload_document"
      operationId: "Update document"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  description: Метка
                  example: "Скан паспорта"
                documentType:
                  type: integer
                  description: ID типа файла
                  example: 1
                userDocument:
                  $ref: '#/components/schemas/Uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "Document"
      summary: "Удаление загруженного документа по ID"
      description: "Delete document from table upload_document"
      operationId: "Delete document"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /document/user/add:
    post:
      tags:
        - "Document"
      summary: "Добавление пользовательского документа"
      description: "User document add to table user_document"
      operationId: "Add user document"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                typeId:
                  type: integer
                  description: ID типа документа
                  example: 3
                document:
                  $ref: '#/components/schemas/UserDocumentData'
                pilotId:
                  $ref: '#/components/schemas/Uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 154
                  createdAt:
                    $ref: '#/components/schemas/DateTime'

  /document/user/{id}:
    get:
      tags:
        - "Document"
      summary: "Загрузка пользовательского документа по ID"
      description: "Load user document from table user_document"
      operationId: "Load user document"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  pilot:
                    $ref: '#/components/schemas/Uuid'
                  user:
                    $ref: '#/components/schemas/User'
                  documentType:
                    $ref: '#/components/schemas/UserDocumentType'
                  document:
                    $ref: '#/components/schemas/UserDocumentData'
                  uploadDocuments:
                    type: array
                    items:
                      $ref: '#/components/schemas/UploadDocument'
        404:
          $ref: '#/components/schemas/404'

    put:
      tags:
        - "Document"
      summary: "Редактирование пользовательского документа по ID"
      description: "Update user document in the table user_document"
      operationId: "Update user document"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                typeId:
                  type: integer
                  description: ID типа документа
                  example: 3
                document:
                  $ref: '#/components/schemas/UserDocumentData'
                pilotId:
                  $ref: '#/components/schemas/Uuid'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "Document"
      summary: "Удаление пользовательского документа по ID"
      description: "Delete user document from table user_document"
      operationId: "Delete user document"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'


  /content/load/carousel:
    get:
      security: []
      tags:
        - "Content"
      summary: "Carousel load"
      description: "Load carousel data"
      operationId: "Load carousel"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarouselUnit'
        404:
          $ref: '#/components/schemas/404'

  /test/load/{id}:
    get:
      security: []
      tags:
        - "Test"
      summary: "test load by id"
      description: "Load test data from test_table "
      operationId: "Load test data"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestData'
        401:
          $ref: '#/components/schemas/401'
        404:
          $ref: '#/components/schemas/404'

  /test/load:
    get:
      security: []
      tags:
        - "Test"
      summary: "test load all"
      description: "Load test data from test_table"
      operationId: "Load test data all"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestData'
        401:
          $ref: '#/components/schemas/401'
        404:
          $ref: '#/components/schemas/404'

  /test/add:
    post:
      security: []
      tags:
        - "Test"
      summary: Creates a new test data.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: string
              required:
                - name
                - value
      responses:
        '200':
          description: Created
#            schema:
#              type: object
#              properties:
#                result: # <!--- form field name
#                  type: string
#                  description: Result
#                  example: 'Данные успешно добавлены'



components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    401:
      description: Unauthorized
      type: string
      example: JWT token not found
    404:
      description: Not found response
      type: string
      example: Not found

    Aircraft:
      description: БВС
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Uuid'
        channels:
          type: array
          description: Каналы связи
          example: [ "спутник", "сотовая" ]
        controlSystem:
          type: string
          description: Система управления
          example: Радиоуправление
        aircraft:
          $ref: '#/components/schemas/AircraftData'
        user:
          $ref: '#/components/schemas/User'
        category:
          $ref: '#/components/schemas/AircraftCategory'
        applications:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationId'
        mass:
          $ref: '#/components/schemas/AircraftMass'
        engine:
          $ref: '#/components/schemas/AircraftEngine'
        engineTypes:
          type: array
          items:
            $ref: '#/components/schemas/EngineType'
        aircraftEngineComplects:
          type: array
          items:
            $ref: '#/components/schemas/EngineComplect'
        registrationStatus:
          $ref: '#/components/schemas/AircraftRegistrationStatus'
        aircraftRegistrations:
          type: array
          items:
            $ref: '#/components/schemas/AircraftRegistration'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'
      required:
        - category
        - createdAt

    AircraftData:
      description: Данные БВС
      type: object
      properties:
        isCatapultStart:
          type: boolean
          description: Запуск с катапульты
          example: false
        isHandStart:
          type: boolean
          description: Запуск с рук
          example: false
        isParachuteLanding:
          type: boolean
          description: Парашютная посадка
          example: false
        isVerticalStart:
          type: boolean
          description: Вертикальный взлёт
          example: false
        landingSiteLength:
          type: integer
          description: Длина посадочной  полосы
          example: 15
        landingSiteWidth:
          type: integer
          description: Ширина посадочной  полосы
          example: 15
        responderType:
          type: string
          description: Тип ответчика
          example: ADS-B
        otherParams:
          type: string
          description: Прочие параметры
          example: Допустимая перегрузка - 8g
        serialNumber:
          type: string
          description: Серийный номер
          example: 'ADS-B'
        registrationNumber:
          type: string
          description: Регистрационный номер
          example: 'SDF252RF'
        registrationDate:
          $ref: '#/components/schemas/DateTime'
        deregistrationDate:
          $ref: '#/components/schemas/DateTime'
        deregistrationReason:
          type: string
          description: Причина снятия с регистрации
          example: 'Неисправность'
        type:
          type: string
          description: Тип
          example: 'Беспилотник'
        numberOfEngines:
          type: integer
          description: Кол-во двигателей
          example: 4
        takeoffMass:
          type: integer
          description: Максимальная взлётная масса, кг.
          example: 3
        manufacturer:
          type: string
          description: Производитель
          example: 'Люфтганза'
        insuranceCompany:
          type: string
          description: Страховая компания
          example: 'Росно'
        insurancePolicyNumber:
          type: string
          description: Номер страхового полиса
          example: 'ASN254/s'
        insuranceStart:
          $ref: '#/components/schemas/DateTime'
        insuranceEnd:
          $ref: '#/components/schemas/DateTime'
        userDocuments:
          type: array
          items:
            $ref: '#/components/schemas/UserDocumentData'
      required:
        - category
        - createdAt

    AircraftCategory:
      description: Категория судна по назначению
      type: object
      properties:
        id:
          type: integer
          description: ID категории
          example: 14
        name:
          type: string
          description: Название
          example: 'Стандартная'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'

    AircraftEngine:
      description: Категория судна по типу двигателя
      type: object
      properties:
        id:
          type: integer
          description: ID категории
          example: 14
        name:
          type: string
          description: Название
          example: 'Электрический двигатель'
        shortName:
          type: string
          description: Название
          example: 'ЭД'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'

    AircraftMass:
      description: Категория судна по массе
      type: object
      properties:
        id:
          type: integer
          description: ID категории
          example: 14
        name:
          type: string
          description: Название
          example: 'До 30 кг'
        massMin:
          type: integer
          description: Минимальная масса
          example: 2
        massMax:
          type: integer
          description: Максимальня масса
          example: 15
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'

    AircraftRegistrationList:
      description: Регистрация БВС
      type: object
      properties:
        registrations:
          type: array
          items:
            $ref: '#/components/schemas/AircraftRegistration'

    AircraftRegistration:
      description: Регистрация БВС
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Uuid'
        user:
          $ref: '#/components/schemas/User'
        registration:
          $ref: '#/components/schemas/AircraftRegistrationData'
        type:
          $ref: '#/components/schemas/AircraftRegistrationType'
        status:
          $ref: '#/components/schemas/AircraftRegistrationStatus'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'

    AircraftRegistrationStatus:
      description: Статус регистрации судна
      type: object
      properties:
        id:
          type: integer
          description: ID статуса
          example: 14
        label:
          type: string
          description: Метка
          example: 'unregistered'
        name:
          type: string
          description: Название
          example: 'Не зарегистрирован'


    AircraftRegistrationType:
      description: Тип регистрации судна
      type: object
      properties:
        id:
          type: integer
          description: ID статуса
          example: 14
        label:
          type: string
          description: Метка
          example: 'reg'
        name:
          type: string
          description: Название
          example: 'Регистрация'

    AircraftRegistrationData:
      description: Данные регистрации БВС
      type: object
      properties:
        aircraft:
          $ref: '#/components/schemas/Uuid'
        owner:
          $ref: '#/components/schemas/Uuid'
        externalId:
          type: string
          description: Внешний ID
          example: 'ASXD35-47'
        comment:
          type: string
          description: Комментарий
          example: 'Смена номера'

    AircraftNamed:
      description: Данные БВС
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Uuid'
        serialNumber:
          type: string
          description: Серийный номер
          example: 'ADS-B'
        registrationNumber:
          type: string
          description: Регистрационный номер
          example: 'SDF252RF'
        type:
          type: string
          description: Тип
          example: 'Беспилотник'

    User:
      description: Данные пользователя
      type: object
      properties:
        id:
          type: integer
          description: ID Пользователя
          example: 123
        user:
          $ref: '#/components/schemas/UserData'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'

    UserData:
      description: Данные пользователя
      type: object
      properties:
        username:
          type: string
          description: Логин
          example: user1
        email:
          type: string
          description: Емайл
          example: user@abraham.tech
        phone:
          type: string
          description: Phone
          example: +79031234567
        firstname:
          type: string
          description: Имя
          example: 'Иван'
        lastname:
          type: string
          description: Фамилия
          example: 'Петров'
        enabled:
          type: boolean
          description: Активен
          example: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        dateOfBirth:
          $ref: '#/components/schemas/DateTime'
        lastLogin:
          $ref: '#/components/schemas/DateTime'

    UserNew:
      description: Регистрация пользователя
      type: object
      properties:
        username:
          type: string
          description: Логин
          example: user1
        password:
          type: string
          description: Логин
          example: user1
        email:
          type: string
          description: Емайл
          example: user@abraham.tech
        phone:
          type: string
          description: Phone
          example: +79031234567
        firstname:
          type: string
          description: Имя
          example: 'Иван'
        lastname:
          type: string
          description: Фамилия
          example: 'Петров'
        middlename:
          type: string
          description: Отчество
          example: 'Васильевис'
        dateOfBirth:
          $ref: '#/components/schemas/DateTime'

    UploadDocumentData:
      description: Данные загруженного документа
      type: object
      properties:
        label:
          type: string
          description: метка
          example: "Скан паспорта"
        documentName:
          type: string
          description: File name
          example: "pp-60869f64c634b275368850.jpg"
        documentSize:
          type: integer
          description: File size
          example: 2354
        mimeType:
          type: string
          description: mime_type
          example: 'image/jpeg'

    UploadDocumentForm:
      description: Загруженный документ
      type: object
      properties:
        upload:
          type: string
          format: binary
        label:
          type: string
          description: метка
          example: "Скан паспорта"
        uploadDocumentType:
          type: integer
          description: Тип загружаемого документа
          example: 1
        userDocumentId:
          $ref: '#/components/schemas/Uuid'

    UploadDocument:
      description: Загруженный документ
      type: object
      properties:
        id:
          type: integer
          description: ID документа
          example: 2
        userId:
          $ref: '#/components/schemas/Uuid'
        documentName:
          type: string
          description: Имя файла
          example: "2465754738668568.jpg"
        documentSize:
          type: integer
          description: Размер файла
          example: 2542
        mimeType:
          type: string
          description: Тип файла
          example: "image/jpeg"
        label:
          type: string
          description: метка
          example: "Скан паспорта"
        uploadDocumentType:
          $ref: '#/components/schemas/UploadDocumentType'
        userDocumentId:
          $ref: '#/components/schemas/Uuid'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'

    UploadDocumentType:
      type: object
      properties:
        id:
          type: integer
          description: ID типа загружаемого документа
          example: 2
        fileType:
          type: string
          description: тип файла
          example: "document"
        name:
          type: string
          description: Название типа файла
          example: "Текстовый документ"
        active:
          type: boolean
          description: Активен
          example: true

    UserDocumentCategory:
      description: Категория пользовательского документа
      type: object
      properties:
        name:
          type: string
          description: Название
          example: "Удостоверяющие личность"
        description:
          type: string
          description: Описание
          example: 'Документы, удостоверяющие личность частного лица'

    UserDocumentType:
      description: Категория пользовательского документа
      type: object
      properties:
        category:
          $ref: '#/components/schemas/UserDocumentCategory'
        type:
          $ref: '#/components/schemas/UserDocumentTypeData'

    UserDocumentTypeData:
      description: Категория пользовательского документа
      type: object
      properties:
        code:
          type: string
          description: Код
          example: "03"
        shortName:
          type: string
          description: Сокращённое название
          example: "Св-во о рожд."
        name:
          type: string
          description: Полное название
          example: "Свидетельство о рождении"

    UserDocument:
      description: Пользовательский документ
      type: object
      properties:
        id:
          type: integer
          description: ID документа
          example: 2
        user:
          $ref: '#/components/schemas/User'
        type:
          $ref: '#/components/schemas/UserDocumentType'
        aircraftId:
          $ref: '#/components/schemas/Uuid'
        pilotId:
          $ref: '#/components/schemas/Uuid'
        userDocument:
          $ref: '#/components/schemas/UserDocumentData'
        uploadDocuments:
          type: array
          items:
            $ref: '#/components/schemas/UploadDocument'

    UserDocumentData:
      description: Данные пользовательского документа
      type: object
      properties:
        name:
          type: string
          description: Название
          example: "Мой паспорт"
        series:
          type: string
          description: Серия
          example: 'AS12'
        number:
          type: string
          description: Номер
          example: '152-528'
        isActive:
          type: boolean
          description: Действующий
          example: true
        issued:
          $ref: '#/components/schemas/DateTime'
        issuedBy:
          type: string
          description: Кем выдан
          example: 'УМВД по г. Москве в ЗАО'
        expiration:
          $ref: '#/components/schemas/DateTime'

    UserUpdate:
      description: Данные пользователя
      type: object
      properties:
        email:
          type: string
          description: Емайл
          example: user@abraham.tech
        phone:
          type: string
          description: Емайл
          example: user@abraham.tech
        firstname:
          type: string
          description: Имя
          example: 'Иван'
        lastname:
          type: string
          description: Фамилия
          example: 'Петров'
        middlename:
          type: string
          description: Отчество
          example: 'Львович'
        enabled:
          type: boolean
          description: Активен
          example: true
        dateOfBirth:
          $ref: '#/components/schemas/DateTime'

    Track:
      description: Данные маршрута
      type: object
      properties:
        heightMin:
          type: integer
          description: Минимальная высота
          example: 5
        heightMax:
          type: integer
          description: Максимальная высота
          example: 50
        latitude:
          type: string
          description: Широта
          example: '43.2524587501'
        longitude:
          type: string
          description: Долгота
          example: '43.2524587501'
        radius:
          type: integer
          description: Радиус зоны
          example: 500
        type:
          type: integer
          description: Тип маршрута
          example: 1
        isFinal:
          type: boolean
          description: Готов
          example: true
        name:
          type: string
          description: Название маршрута
          example: 'Типовой маршрут'
        shape:
          type: string
          description: Форма
          example: '6941154196541955145410101065106106106510651065016501'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'
      required:
        - name

    TrackData:
      description: Данные маршрута
      type: object
      properties:
        heightMin:
          type: integer
          description: Минимальная высота
          example: 5
        heightMax:
          type: integer
          description: Максимальная высота
          example: 50
        latitude:
          type: string
          description: Широта
          example: '43.2524587501'
        longitude:
          type: string
          description: Долгота
          example: '43.2524587501'
        radius:
          type: integer
          description: Радиус зоны
          example: 500
        type:
          type: integer
          description: Тип маршрута
          example: 1
        isFinal:
          type: boolean
          description: Готов
          example: true
        name:
          type: string
          description: Название маршрута
          example: 'Типовой маршрут'
        shape:
          type: string
          description: Форма
          example: '6941154196541955145410101065106106106510651065016501'
      required:
        - name

    TrackId:
      description: Данные маршрута
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Uuid'
        type:
          type: integer
          description: Тип маршрута
          example: 1
        name:
          type: string
          description: Имя маршрута
          example: 'Типовой маршрут'
        isFinal:
          type: boolean
          description: Готов
          example: true
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'
        applicationsNumber:
          type: integer
          description: Кол-во заявок с данным маршрутом
          example: 0
      required:
        - user

    Application:
      description: Данные заявки
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Uuid'
        user:
          $ref: '#/components/schemas/User'
        application:
          $ref: '#/components/schemas/ApplicationData'
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        aircraft:
          $ref: '#/components/schemas/Aircraft'
        pilot:
          $ref: '#/components/schemas/User'
        chief:
          $ref: '#/components/schemas/User'
        track:
          $ref: '#/components/schemas/TrackId'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'

    ApplicationId:
      description: Данные заявки
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Uuid'
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        externalId:
          type: string
          description: Номер заявки
          example: AL14212
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'

    ApplicationData:
      description: Данные заявки
      type: object
      properties:
        refuseReason:
          type: string
          description: Причина отказа
          example: 'Пересечение с запретной зоной'
        externalId:
          type: string
          description: Номер заявки
          example: AL14212
        start:
          $ref: '#/components/schemas/DateTime'
        finish:
          $ref: '#/components/schemas/DateTime'

    Individual:
      description: Физическое лицо
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Uuid'
        user:
          $ref: '#/components/schemas/User'
        identityId:
          $ref: '#/components/schemas/Uuid'
        individual:
          $ref: '#/components/schemas/IndividualData'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'

    EngineComplect:
      description: Комплекты двигателей
      type: object
      properties:
        id:
          type: integer
          description: ID комплекта
          example: 1
        engineComplect:
          $ref: '#/components/schemas/EngineComplectData'

    TrackerData:
      description: Трекер
      properties:
        description:
          type: string
          description: Описание трекера
          example: "Базовый набор"
        externalId:
          type: string
          description: Внешний ID
          example: "DSE-152/17"

    TrackerType:
      description: Тип трекера
      properties:
        id:
          type: integer
          description: ID типа трекера
          example: 1
        code:
          type: string
          description: Код типа трекера
          example: "GSM"
        name:
          type: string
          description: Название типа трекера
          example: "GSM Трекер"

    Entrepreneur:
      description: Индивилуальный предприниматель
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Uuid'
        head:
          $ref: '#/components/schemas/Individual'
        user:
          $ref: '#/components/schemas/User'
        entrepreneur:
          $ref: '#/components/schemas/EntrepreneurData'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'

    LegalEntity:
      description: Юридическое лицо
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Uuid'
        head:
          $ref: '#/components/schemas/Individual'
        user:
          $ref: '#/components/schemas/User'
        legalEntity:
          $ref: '#/components/schemas/LegalEntityData'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'

    IndividualData:
      description: Данные физического лица
      type: object
      properties:
        placeOfBirth:
          type: string
          description: Место рождения
          example: Москва
        dateOfBirth:
          $ref: '#/components/schemas/DateTime'
        phone:
          type: string
          description: Мобильный телефон
          example: +79031234567
        residence:
          type: string
          description: Адрес места жительства
          example: Москва, Протопоповский пер., д. 3 кв. 12
        snils:
          type: string
          description: СНИЛС
          example: 075-375-15245

    EngineType:
      description: Данные по количеству двигателей
      type: object
      properties:
        id:
          type: integer
          description: ID категории
          example: 1
        complectId:
          type: integer
          description: ID комплекта
          example: 5
        name:
          type: string
          description: Название
          example: 'Электрический двигатель'
        shortName:
          type: string
          description: Название
          example: 'ЭД'
        number:
          type: integer
          description: Количество
          example: 2

    EngineComplectData:
      description: Данные по комплаектам двигателей
      type: object
      properties:
        aircraftId:
          $ref: '#/components/schemas/Uuid'
        engineId:
          $ref: '#/components/schemas/AircraftEngine'
        number:
          type: integer
          description: Количество
          example: 2

    EntrepreneurData:
      description: Данные инливидуального предпринимателя
      type: object
      properties:
        ogrn:
          type: string
          description: ОГРН
          example: 1177746415857
        inn:
          type: string
          description: ИНН
          example: 7704407589
        email:
          type: string
          description: Емайл
          example: mail@example.com
        phone:
          type: string
          description: Мобильный телефон
          example: +79031234567
        active:
          type: boolean
          description: Активен
          example: true

    LegalEntityData:
      description: Данные юридического лица
      type: object
      properties:
        fullName:
          type: string
          description: Полное наименование
          example: 'Общество с ограниченной  ответственностью "Вектор"'
        shortName:
          type: string
          description: Краткое наименование
          example: 'ООО "Вектор"'
        ogrn:
          type: string
          description: ОГРН
          example: 1177746415857
        inn:
          type: string
          description: ИНН
          example: 7704407589
        address:
          type: string
          description: Адрес
          example: 'Москва, ул Авиамоторная, д. 3'
        email:
          type: string
          description: Емайл
          example: mail@example.com
        phone:
          type: string
          description: Мобильный телефон
          example: +79031234567
        headPosition:
          type: string
          description: Должность руководителя
          example: 'Генеральный директор'
        active:
          type: boolean
          description: Активен
          example: true

    PilotData:
      description: Данные пилота
      type: object
      properties:
        licenseAuthority:
          type: string
          description: Учреждение лицензирования
          example: 'Школа лётчиков'
        external:
          type: boolean
          description: Внешний
          example: true

    OwnerData:
      description: Данные владельца
      type: object
      properties:
        email:
          type: string
          description: Емайл
          example: mail@example.com
        phone:
          type: string
          description: Мобильный телефон
          example: +79031234567

    ApplicationStatus:
      description: Статус завявки
      type: object
      properties:
        id:
          type: integer
          description: ID статуса
          example: 2
        name:
          type: string
          description: Название
          example: 'Шаблон'
    Uuid:
      type: string
      format: uuid
      example: "70fc5563-65f8-476a-b8e9-00099979e93c"

    Role:
      type: string
      example: "ROLE_USER"

    DateTime:
      description: Дата/время
      type: object
      properties:
        date:
          type: string
          description: Date
          example: "2021-05-19 11:21:48"
        timezone_type:
          type: integer
          description: Time Zone Type
          example: 3
        timezone:
          type: string
          description: Time Zone
          example: "Europe/Moscow"

    TestData:
      description: Тестовые данные
      type: object
      properties:
        id:
          type: integer
          description: Test data ID
          example: 1
        name:
          type: string
          description: Test name
          example: 'Test name'
        value:
          type: string
          description: Test value
          example: 'Test value'
      required:
        - name
        - value

    CarouselUnit:
      description: Данные карусели
      type: object
      properties:
        id:
          type: integer
          description: Carousel element ID
          example: 1
        header:
          type: string
          description: Carousel element header
          example: 'Carousel element 1'
        content:
          type: string
          description: Carousel element content
          example: 'Carousel element text'
        pictureType:
          type: string
          description: image or video
          example: 'image'
        style:
          type: string
          description: style tag content
          example: 'margin: 0;'
        timeout:
          type: integer
          description: carousel element delay in millyseconds
          example: 1000
        picture:
          $ref: '#/components/schemas/CarouselFile'
        poster:
          $ref: '#/components/schemas/CarouselFile'
      required:
        - picture_type

    CarouselFile:
      description: Картинка либо видео для карусели
      type: object
      properties:
        id:
          type: integer
          description: Carousel file ID
          example: 1
        label:
          type: string
          description: Carousel file label
          example: 'Innovation poster'
        mimeType:
          type: string
          description: Carousel file mimetype
          example: 'image/jpeg'
        imageName:
          type: string
          description: Carousel file name
          example: 'photo_547854754_as.jpg'
        updatedAt:
          type: string
          format: datetime
          example: '1990-01-01 16:45:20'
      required:
        - image_name

    SuccessAdd:
      description: Добавление данных
      type: object
      properties:
        id:
          type: integer
          description: New data ID
          example: 1
        message:
          type: string
          description: Message
          example: 'Данные успешно добавлены'
security:
  - bearerAuth: []