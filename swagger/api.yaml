openapi: 3.0.0

info:
  title: Abraham Technology API
  description: Products API of ABR
  version: 1.0.0

servers:
  - url: http://sym6api
    description: Localhost server from develop


tags:
  - name: User
    description: Данные пользователей

  - name: Current User
    description: Данные текущего пользователя

  - name: Individual
    description: Данные по физическим лицам

paths:

  /my/userdata:
    get:
      tags:
        - "Current User"
      summary: "Данные текущего пользователя"
      description: "Data of current user"
      operationId: "current user data"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
    put:
      tags:
        - "Current User"
      summary: "Изменение текущего пользователя"
      description: "Update data of current user"
      operationId: "update  current user data"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserUpdate'
        404:
          $ref: '#/components/schemas/404'



  /individual/add:
    post:
      tags:
        - "Individual"
      summary: "Добавление физического лица"
      description: "Add individual to table individual"
      operationId: "Add individual"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identityId:
                  $ref: '#/components/schemas/Uuid'
                individual:
                  $ref: '#/components/schemas/IndividualData'
              required:
                - residence
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /individual/{id}:
    get:
      tags:
        - "Individual"
      summary: "Загрузка физического лица по ID"
      description: "Load individual from table individual"
      operationId: "Load individual"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  user:
                    $ref: '#/components/schemas/User'
                  individual:
                    $ref: '#/components/schemas/IndividualData'
                  createdAt:
                    $ref: '#/components/schemas/DateTime'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "Individual"
      summary: "Изменение физического лица по ID"
      description: "Edit individual in the table individual"
      operationId: "Edit individual"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identityId:
                  $ref: '#/components/schemas/Uuid'
                individual:
                  $ref: '#/components/schemas/IndividualData'
              required:
                - residence
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'
    delete:
      tags:
        - "Individual"
      summary: "Удаление физического лица по ID"
      description: "Delete individual from table individual"
      operationId: "Delete individual"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  deletedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

  /user/name/{username}:
    get:
      tags:
        - "User"
      summary: "Загрузка пользователя по username"
      description: "Load user from table fos_user_user"
      operationId: "Load user by username"
      parameters:
        - in: path
          name: username
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          $ref: '#/components/schemas/404'

  /user/{id}:
    get:
      tags:
        - "User"
      summary: "Загрузка пользователя по ID"
      description: "Load user from table fos_user_user"
      operationId: "Load user"
      parameters:
        - in: path
          name: id
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          $ref: '#/components/schemas/404'
    put:
      tags:
        - "User"
      summary: "Изменение пользователя"
      description: "Update user to table fos_user_user"
      operationId: "Update user"
      parameters:
        - in: path
          name: id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/UserUpdate'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/Uuid'
                  updatedAt:
                    $ref: '#/components/schemas/DateTime'
        404:
          $ref: '#/components/schemas/404'

security:
  - bearerAuth: []